import ConcurrentOutput from '../../private/node/ui/components/ConcurrentOutput.js';
import { consoleError } from '../../output.js';
import { render, renderOnce } from '../../private/node/ui.js';
import { alert } from '../../private/node/ui/alert.js';
import { FatalError } from '../../private/node/ui/components/FatalError.js';
import { SelectPrompt } from '../../private/node/ui/components/SelectPrompt.js';
import { Tasks } from '../../private/node/ui/components/Tasks.js';
import { TextPrompt } from '../../private/node/ui/components/TextPrompt.js';
import React from 'react';
import { AbortController } from '@shopify/cli-kit/node/abort';
/**
 * Renders output from concurrent processes to the terminal with {@link ConcurrentOutput}.
 */
export async function renderConcurrent({ processes, abortController, showTimestamps = true, renderOptions = {}, }) {
    return render(React.createElement(ConcurrentOutput, { processes: processes, abortController: abortController ?? new AbortController(), showTimestamps: showTimestamps }), renderOptions);
}
/**
 * Renders an information banner to the console.
 *
 * Basic:
 *
 * ```
 * ╭─ info ───────────────────────────────────────────────────╮
 * │                                                          │
 * │  Body                                                    │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 *
 * Complete:
 * ```
 * ╭─ info ───────────────────────────────────────────────────╮
 * │                                                          │
 * │  Title                                                   │
 * │                                                          │
 * │  Body                                                    │
 * │                                                          │
 * │  Next steps                                              │
 * │    • Run `cd santorini-goods`                            │
 * │    • To preview your project, run `npm app dev`          │
 * │    • To add extensions, run `npm generate extension`     │
 * │                                                          │
 * │  Reference                                               │
 * │    • Run `npm shopify help`                              │
 * │    • Press 'return' to open the dev docs:                │
 * │      https://shopify.dev                                 │
 * │                                                          │
 * │  Link: https://shopify.com                               │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 */
export function renderInfo(options) {
    return alert({ ...options, type: 'info' });
}
/**
 * Renders a success banner to the console.
 *
 * Basic:
 *
 * ```
 * ╭─ success ────────────────────────────────────────────────╮
 * │                                                          │
 * │  Title                                                   │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 *
 * Complete:
 * ```
 * ╭─ success ────────────────────────────────────────────────╮
 * │                                                          │
 * │  Title                                                   │
 * │                                                          │
 * │  Body                                                    │
 * │                                                          │
 * │  Next steps                                              │
 * │    • Run `cd santorini-goods`                              │
 * │    • To preview your project, run `npm app dev`            │
 * │    • To add extensions, run `npm generate extension`       │
 * │                                                          │
 * │  Reference                                               │
 * │    • Run `npm shopify help`                                │
 * │    • Press 'return' to open the dev docs:                │
 * │      https://shopify.dev                                 │
 * │                                                          │
 * │  Link: https://shopify.com                               │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 */
export function renderSuccess(options) {
    return alert({ ...options, type: 'success' });
}
/**
 * Renders a warning banner to the console.
 *
 * Basic:
 *
 * ```
 * ╭─ warning ────────────────────────────────────────────────╮
 * │                                                          │
 * │  Title                                                   │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 *
 * Complete:
 * ```
 * ╭─ warning ────────────────────────────────────────────────╮
 * │                                                          │
 * │  Title                                                   │
 * │                                                          │
 * │  Body                                                    │
 * │                                                          │
 * │  Next steps                                              │
 * │    • Run `cd santorini-goods`                            │
 * │    • To preview your project, run `npm app dev`          │
 * │    • To add extensions, run `npm generate extension`     │
 * │                                                          │
 * │  Reference                                               │
 * │    • Run `npm shopify help`                              │
 * │    • Press 'return' to open the dev docs:                │
 * │      https://shopify.dev                                 │
 * │                                                          │
 * │  Link: https://shopify.com                               │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 */
export function renderWarning(options) {
    return alert({ ...options, type: 'warning' });
}
/**
 * Renders a Fatal error to the console inside a banner.
 *
 * ```
 * ╭─ error ──────────────────────────────────────────────────╮
 * │                                                          │
 * │  Couldn't connect to the Shopify Partner Dashboard.      │
 * │                                                          │
 * │  Check your internet connection and try again.           │
 * │                                                          │
 * ╰──────────────────────────────────────────────────────────╯
 * ```
 */
export function renderFatalError(error) {
    return renderOnce(React.createElement(FatalError, { error: error }), 'error', consoleError);
}
/**
 * Renders a select prompt to the console.
 *
 * ?  Associate your project with the org Castile Ventures?
 *
 *      Add:     • new-ext
 *
 *      Remove:  • integrated-demand-ext
 *               • order-discount

 * \>  (f) first
 *     (s) second
 *     (3) third
 *     (4) fourth
 *     (5) seventh
 *     (6) tenth

 *     Automations
 *     (7) fifth
 *     (8) sixth

 *     Merchant Admin
 *     (9) eighth
 *     (10) ninth

 *     navigate with arrows, enter to select
 */
export function renderSelectPrompt(props) {
    return new Promise((resolve, reject) => {
        render(React.createElement(SelectPrompt, { ...props, onSubmit: (value) => resolve(value) }), {
            exitOnCtrlC: false,
        }).catch(reject);
    });
}
/**
 * Runs async tasks and displays their progress to the console.
 */
export function renderTasks(tasks) {
    return render(React.createElement(Tasks, { tasks: tasks }));
}
/**
 * Renders a text prompt to the console.
 *
 * ?  What is your name?
 * \>  John
 */
export function renderTextPrompt(props) {
    return new Promise((resolve, reject) => {
        render(React.createElement(TextPrompt, { ...props, onSubmit: (value) => resolve(value) }), {
            exitOnCtrlC: false,
        }).catch(reject);
    });
}
//# sourceMappingURL=ui.js.map