import Conf from 'conf';
export interface CachedAppInfo {
    directory: string;
    appId?: string;
    title?: string;
    orgId?: string;
    storeFqdn?: string;
    updateURLs?: boolean;
    tunnelPlugin?: string;
}
interface ConfSchema {
    appInfo: CachedAppInfo[];
    themeStore: string;
    session: string;
}
export declare function cliKitStore(): CLIKitStore;
export declare function getAppInfo(directory: string): CachedAppInfo | undefined;
export declare function setAppInfo(options: {
    directory: string;
    appId?: string;
    title?: string;
    storeFqdn?: string;
    orgId?: string;
    updateURLs?: boolean;
    tunnelPlugin?: string;
}): void;
export declare function clearAppInfo(directory: string): void;
export declare function getThemeStore(): string | undefined;
export declare function setThemeStore(themeStore: string): void;
export declare function getSession(): string | undefined;
export declare function setSession(session: string): void;
export declare function removeSession(): void;
export declare function clearAllAppInfo(): void;
export declare class CLIKitStore extends Conf<ConfSchema> {
    getAppInfo(directory: string): CachedAppInfo | undefined;
    setAppInfo(options: {
        directory: string;
        appId?: string;
        title?: string;
        storeFqdn?: string;
        orgId?: string;
        updateURLs?: boolean;
        tunnelPlugin?: string;
    }): void;
    clearAppInfo(directory: string): void;
    clearAllAppInfo(): void;
    getThemeStore(): string | undefined;
    setThemeStore(themeStore: string): void;
    getSession(): string | undefined;
    setSession(session: string): void;
    removeSession(): void;
}
export {};
