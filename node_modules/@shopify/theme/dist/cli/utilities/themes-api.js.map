{"version":3,"file":"themes-api.js","sourceRoot":"","sources":["../../../src/cli/utilities/themes-api.ts"],"names":[],"mappings":"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","sourcesContent":["import * as throttler from './themes-api/throttler.js'\nimport {apiCallLimit, retryAfter} from './themes-api/headers.js'\nimport {retry} from './themes-api/retry.js'\nimport {storeAdminUrl} from './theme-urls.js'\nimport {Theme} from '../models/theme.js'\nimport {error} from '@shopify/cli-kit'\nimport {restRequest, RestResponse} from '@shopify/cli-kit/node/api/admin'\nimport {AdminSession} from '@shopify/cli-kit/node/session.js'\n\nexport type ThemeParams = Partial<Pick<Theme, 'name' | 'role'>>\n\nexport async function fetchThemes(session: AdminSession): Promise<Theme[]> {\n  const response = await request('GET', '/themes', session)\n  return buildThemes(response)\n}\n\nexport async function createTheme(params: ThemeParams, session: AdminSession): Promise<Theme | undefined> {\n  const response = await request('POST', '/themes', session, {theme: {...params}})\n  return buildTheme(response.json.theme)\n}\n\nexport async function updateTheme(id: number, params: ThemeParams, session: AdminSession): Promise<Theme | undefined> {\n  const response = await request('PUT', `/themes/${id}`, session, {theme: {id, ...params}})\n  return buildTheme(response.json.theme)\n}\n\nexport async function deleteTheme(id: number, session: AdminSession): Promise<Theme | undefined> {\n  const response = await request('DELETE', `/themes/${id}`, session)\n  return buildTheme(response.json.theme)\n}\n\nasync function request<T>(method: string, path: string, session: AdminSession, params?: T): Promise<RestResponse> {\n  const response = await throttler.throttle(() => restRequest(method, path, session, params))\n\n  const status = response.status\n  const callLimit = apiCallLimit(response)\n\n  throttler.updateApiCallLimit(callLimit)\n\n  switch (true) {\n    case status >= 200 && status <= 399:\n      // Returns the successful reponse\n      return response\n    case status === 404:\n      // Defer the decision when a resource is not found\n      return response\n    case status === 429:\n      // Retry following the \"retry-after\" header\n      return retry(() => request(method, path, session), retryAfter(response))\n    case status === 403:\n      return handleForbiddenError(session)\n    case status === 401:\n      throw new error.Abort(`[${status}] API request unauthorized error`)\n    case status >= 400 && status <= 499:\n      throw new error.Abort(`[${status}] API request client error`)\n    case status >= 500 && status <= 599:\n      throw new error.Abort(`[${status}] API request server error`)\n    default:\n      throw new error.Abort(`[${status}] API request unexpected error`)\n  }\n}\n\nfunction buildThemes(response: RestResponse): Theme[] {\n  const themes = response.json?.themes\n\n  if (themes?.length > 0) {\n    return themes.map(buildTheme)\n  }\n\n  return []\n}\n\n// Using `any` to avoid introducing extra DTO layers.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction buildTheme(themeJson: any): Theme | undefined {\n  if (!themeJson?.id) {\n    return undefined\n  }\n\n  return new Theme(\n    themeJson.id,\n    themeJson.name,\n    themeJson.created_at,\n    themeJson.updated_at,\n    themeJson.role,\n    themeJson.theme_store_id,\n    themeJson.previewable,\n    themeJson.processing,\n    themeJson.admin_graphql_api_id,\n  )\n}\n\nfunction handleForbiddenError(session: AdminSession): never {\n  const store = session.storeFqdn\n  const adminUrl = storeAdminUrl(session)\n\n  throw new error.Abort(\n    `You are not authorized to edit themes on \"${store}\".`,\n    \"You can't use Shopify CLI with development stores if you only have Partner staff \" +\n      'member access. If you want to use Shopify CLI to work on a development store, then ' +\n      'you should be the store owner or create a staff account on the store.' +\n      '\\n\\n' +\n      \"If you're the store owner, then you need to log in to the store directly using the \" +\n      `store URL at least once (for example, using \"${adminUrl}\") before you log in using ` +\n      'Shopify CLI. Logging in to the Shopify admin directly connects the development ' +\n      'store with your Shopify login.',\n  )\n}\n"]}