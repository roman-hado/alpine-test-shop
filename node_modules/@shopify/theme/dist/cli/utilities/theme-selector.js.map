{"version":3,"file":"theme-selector.js","sourceRoot":"","sources":["../../../src/cli/utilities/theme-selector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,gBAAgB,EAAC,MAAM,2BAA2B,CAAA;AAC1D,OAAO,EAAC,MAAM,EAAe,YAAY,EAAC,MAAM,4BAA4B,CAAA;AAC5E,OAAO,EAAC,kBAAkB,EAAC,MAAM,0BAA0B,CAAA;AAG3D;;;;;;;;;;GAUG;AACH,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,OAAqB,EAAE,IAA2C;IACxG,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAA;IAC9C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACtC,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAA;IAE/B,IAAI,MAAM,CAAC,GAAG,EAAE,EAAE;QAChB,OAAO,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAA;KAC/C;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAA;IAC3B,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;QACnC,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG;SACvC,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,kBAAkB,CAAC;QACxB,OAAO;QACP,OAAO;KACR,CAAC,CAAA;AACJ,CAAC","sourcesContent":["import {fetchStoreThemes} from './theme-selector/fetch.js'\nimport {Filter, FilterProps, filterThemes} from './theme-selector/filter.js'\nimport {renderSelectPrompt} from '@shopify/cli-kit/node/ui'\nimport {AdminSession} from '@shopify/cli-kit/node/session.js'\n\n/**\n * Finds or selects a theme in the store.\n *\n * @param session - Current Admin session\n * @param options - Options to select a theme:\n *  - header: the header presented when users select a theme\n *  - filter: the filter {@link FilterProps} applied in the list\n *            of themes in the store\n *\n * @returns the selected {@link Theme}\n */\nexport async function findOrSelectTheme(session: AdminSession, opts: {header: string; filter: FilterProps}) {\n  const themes = await fetchStoreThemes(session)\n  const filter = new Filter(opts.filter)\n  const store = session.storeFqdn\n\n  if (filter.any()) {\n    return filterThemes(store, themes, filter)[0]!\n  }\n\n  const message = opts.header\n  const choices = themes.map((theme) => {\n    return {\n      value: theme,\n      label: `${theme.name} [${theme.role}]`,\n    }\n  })\n\n  return renderSelectPrompt({\n    message,\n    choices,\n  })\n}\n"]}