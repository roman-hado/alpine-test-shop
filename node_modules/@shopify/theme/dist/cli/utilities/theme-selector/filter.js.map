{"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../src/cli/utilities/theme-selector/filter.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,KAAK,EAAC,MAAM,kBAAkB,CAAA;AAEtC,MAAM,UAAU,YAAY,CAAC,KAAa,EAAE,MAAe,EAAE,MAAc;IACzE,OAAO,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;AACpF,CAAC;AAED,SAAS,YAAY,CAAC,KAAa,EAAE,MAAe,EAAE,MAAc;IAClE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;IAExB,IAAI,CAAC,IAAI,EAAE;QACT,OAAM;KACP;IAED,MAAM,KAAK,GAAG,OAAO,KAAK,yCAAyC,IAAI,QAAQ,CAAA;IAE/E,OAAO;QACL,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;YACrB,OAAO,KAAK,CAAC,IAAI,KAAK,IAAI,CAAA;QAC5B,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;KAClB,CAAA;AACH,CAAC;AAED,SAAS,aAAa,CAAC,KAAa,EAAE,MAAe,EAAE,MAAc;IACnE,MAAM,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAA;IAE3C,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;QACpC,MAAM,KAAK,GAAG,OAAO,KAAK,yCAAyC,UAAU,cAAc,CAAA;QAE3F,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;QACzD,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,SAAS,IAAI,CAAC,MAAe,EAAE,SAAoC;IACjE,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAEpC,IAAI,KAAK,EAAE;QACT,OAAO,EAAC,OAAO,EAAE,CAAC,aAAqB,EAAE,EAAE,CAAC,KAAK,EAAC,CAAA;KACnD;IAED,OAAO;QACL,OAAO,EAAE,CAAC,YAAoB,EAAE,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;QACrC,CAAC;KACF,CAAA;AACH,CAAC;AAcD,MAAM,OAAO,MAAM;IACjB,YAAmB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;IAAG,CAAC;IAE9C,IAAI,IAAI;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;YACxB,OAAO,MAAM,CAAA;SACd;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YAC/B,OAAO,aAAa,CAAA;SACrB;IACH,CAAC;IAED,IAAI,gBAAgB;QAClB,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QAEnE,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAe,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IAClE,CAAC;IAED,GAAG;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACrD,CAAC;CACF","sourcesContent":["import {Theme} from '../../models/theme.js'\nimport {error} from '@shopify/cli-kit'\n\nexport function filterThemes(store: string, themes: Theme[], filter: Filter): Theme[] {\n  return filterByRole(store, themes, filter) || filterByTheme(store, themes, filter)\n}\n\nfunction filterByRole(store: string, themes: Theme[], filter: Filter) {\n  const role = filter.role\n\n  if (!role) {\n    return\n  }\n\n  const error = `The ${store} store doesn't have a theme with the \"${role}\" role`\n\n  return [\n    find(themes, (theme) => {\n      return theme.role === role\n    }).orThrow(error),\n  ]\n}\n\nfunction filterByTheme(store: string, themes: Theme[], filter: Filter) {\n  const identifiers = filter.themeIdentifiers\n\n  return identifiers.map((identifier) => {\n    const error = `The ${store} store doesn't have a theme with the \"${identifier}\" ID or name`\n\n    return find(themes, (theme) => {\n      return [`${theme.id}`, theme.name].includes(identifier)\n    }).orThrow(error)\n  })\n}\n\nfunction find(themes: Theme[], predicate: (theme: Theme) => boolean): {orThrow: (error: string) => Theme | never} {\n  const theme = themes.find(predicate)\n\n  if (theme) {\n    return {orThrow: (_errorMessage: string) => theme}\n  }\n\n  return {\n    orThrow: (errorMessage: string) => {\n      throw new error.Abort(errorMessage)\n    },\n  }\n}\n\n/**\n * {@link Theme} ID or name\n */\nexport type ThemeIdentifier = string\n\nexport interface FilterProps {\n  themes?: ThemeIdentifier[]\n  theme?: ThemeIdentifier\n  development?: boolean\n  live?: boolean\n}\n\nexport class Filter {\n  constructor(public queryProps: FilterProps) {}\n\n  get role() {\n    if (this.queryProps.live) {\n      return 'live'\n    }\n    if (this.queryProps.development) {\n      return 'development'\n    }\n  }\n\n  get themeIdentifiers() {\n    const identifiers = [this.queryProps.theme, this.queryProps.themes]\n\n    return identifiers.flat().filter((i): i is string => Boolean(i))\n  }\n\n  any() {\n    return Object.values(this.queryProps).some(Boolean)\n  }\n}\n"]}