import { error } from '@shopify/cli-kit';
export function filterThemes(store, themes, filter) {
    return filterByRole(store, themes, filter) || filterByTheme(store, themes, filter);
}
function filterByRole(store, themes, filter) {
    const role = filter.role;
    if (!role) {
        return;
    }
    const error = `The ${store} store doesn't have a theme with the "${role}" role`;
    return [
        find(themes, (theme) => {
            return theme.role === role;
        }).orThrow(error),
    ];
}
function filterByTheme(store, themes, filter) {
    const identifiers = filter.themeIdentifiers;
    return identifiers.map((identifier) => {
        const error = `The ${store} store doesn't have a theme with the "${identifier}" ID or name`;
        return find(themes, (theme) => {
            return [`${theme.id}`, theme.name].includes(identifier);
        }).orThrow(error);
    });
}
function find(themes, predicate) {
    const theme = themes.find(predicate);
    if (theme) {
        return { orThrow: (_errorMessage) => theme };
    }
    return {
        orThrow: (errorMessage) => {
            throw new error.Abort(errorMessage);
        },
    };
}
export class Filter {
    constructor(queryProps) {
        this.queryProps = queryProps;
    }
    get role() {
        if (this.queryProps.live) {
            return 'live';
        }
        if (this.queryProps.development) {
            return 'development';
        }
    }
    get themeIdentifiers() {
        const identifiers = [this.queryProps.theme, this.queryProps.themes];
        return identifiers.flat().filter((i) => Boolean(i));
    }
    any() {
        return Object.values(this.queryProps).some(Boolean);
    }
}
//# sourceMappingURL=filter.js.map