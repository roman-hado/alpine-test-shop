{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../src/cli/services/info.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAE,KAAK,IAAI,IAAI,EAAC,MAAM,kBAAkB,CAAA;AACtD,OAAO,EAAC,eAAe,EAAC,MAAM,0BAA0B,CAAA;AACxD,OAAO,EAAC,OAAO,IAAI,WAAW,EAAC,MAAM,4BAA4B,CAAA;AACjE,OAAO,EAAC,kBAAkB,EAAC,MAAM,4CAA4C,CAAA;AAC7E,OAAO,EAAC,cAAc,EAAC,MAAM,gCAAgC,CAAA;AAE7D,MAAM,CAAC,KAAK,UAAU,SAAS,CAAC,MAA4B;IAC1D,MAAM,QAAQ,GAAuB,CAAC,kBAAkB,EAAE,EAAE,MAAM,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAA;IAC5F,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAClG,OAAO,OAAO,CAAA;AAChB,CAAC;AAED,SAAS,kBAAkB;IACzB,MAAM,KAAK,GAAG,qBAAqB,CAAA;IACnC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,IAAI,gBAAgB,CAAA;IACtD,MAAM,KAAK,GAAe,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA;IAC5C,OAAO,CAAC,KAAK,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;AAC5C,CAAC;AAED,KAAK,UAAU,iBAAiB,CAAC,MAA4B;IAC3D,MAAM,KAAK,GAAG,oBAAoB,CAAA;IAClC,MAAM,EAAC,QAAQ,EAAE,IAAI,EAAC,GAAG,eAAe,EAAE,CAAA;IAC1C,MAAM,IAAI,GAAG,CAAC,MAAM,WAAW,EAAE,CAAC,IAAI,eAAe,CAAA;IACrD,MAAM,KAAK,GAAe;QACxB,CAAC,aAAa,EAAE,MAAM,cAAc,CAAC,MAAM,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,GAAG,QAAQ,IAAI,IAAI,EAAE,CAAC;QAC7B,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,SAAS,CAAC;QACzC,CAAC,cAAc,EAAE,OAAO,CAAC,OAAO,CAAC;QACjC,CAAC,cAAc,EAAE,IAAI,CAAC;KACvB,CAAA;IACD,OAAO,CAAC,KAAK,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;AAC5C,CAAC;AAED,KAAK,UAAU,cAAc,CAAC,MAA4B;IACxD,MAAM,UAAU,GAAG,cAAc,CAAA;IACjC,MAAM,aAAa,GAAG,MAAM,kBAAkB,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAA;IAC7E,IAAI,CAAC,aAAa;QAAE,OAAO,MAAM,CAAC,UAAU,CAAA;IAC5C,MAAM,cAAc,GAAG,MAAM,CAAC,0BAA0B,CAAC,SAAS,EAAE,aAAa,CAAC,CAAA;IAClF,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;AAC7D,CAAC","sourcesContent":["import {output, store as conf} from '@shopify/cli-kit'\nimport {platformAndArch} from '@shopify/cli-kit/node/os'\nimport {version as rubyVersion} from '@shopify/cli-kit/node/ruby'\nimport {checkForNewVersion} from '@shopify/cli-kit/node/node-package-manager'\nimport {linesToColumns} from '@shopify/cli-kit/common/string'\n\nexport async function themeInfo(config: {cliVersion: string}): Promise<output.Message> {\n  const sections: [string, string][] = [themeConfigSection(), await systemInfoSection(config)]\n  const message = sections.map((sectionContents) => output.section(...sectionContents)).join('\\n\\n')\n  return message\n}\n\nfunction themeConfigSection(): [string, string] {\n  const title = 'Theme Configuration'\n  const store = conf.getThemeStore() || 'Not configured'\n  const lines: string[][] = [['Store', store]]\n  return [title, `${linesToColumns(lines)}`]\n}\n\nasync function systemInfoSection(config: {cliVersion: string}): Promise<[string, string]> {\n  const title = 'Tooling and System'\n  const {platform, arch} = platformAndArch()\n  const ruby = (await rubyVersion()) || 'Not installed'\n  const lines: string[][] = [\n    ['Shopify CLI', await cliVersionInfo(config)],\n    ['OS', `${platform}-${arch}`],\n    ['Shell', process.env.SHELL || 'unknown'],\n    ['Node version', process.version],\n    ['Ruby version', ruby],\n  ]\n  return [title, `${linesToColumns(lines)}`]\n}\n\nasync function cliVersionInfo(config: {cliVersion: string}): Promise<string> {\n  const dependency = '@shopify/cli'\n  const newestVersion = await checkForNewVersion(dependency, config.cliVersion)\n  if (!newestVersion) return config.cliVersion\n  const upgradeMessage = output.getOutputUpdateCLIReminder(undefined, newestVersion)\n  return [config.cliVersion, upgradeMessage].join(' ').trim()\n}\n"]}