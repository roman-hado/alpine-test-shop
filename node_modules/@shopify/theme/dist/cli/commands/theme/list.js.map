{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/list.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gCAAgC,CAAA;AAC5D,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAC,IAAI,EAAC,MAAM,wBAAwB,CAAA;AAC3C,OAAO,EAAC,aAAa,EAAC,MAAM,yCAAyC,CAAA;AACrE,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AACvE,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AAErD,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,YAAY;IAsB5C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;QAClC,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAA;QAE3E,MAAM,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;IACjC,CAAC;;AA3BM,gBAAW,GAAG,2BAA2B,CAAA;AAEzC,UAAK,GAAG;IACb,GAAG,WAAW;IACd,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,KAAK,EAAE,UAAU,CAAC,KAAK;IACvB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC;QACf,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,aAAa;QACtB,GAAG,EAAE,mBAAmB;KACzB,CAAC;IACF,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;QACjB,WAAW,EAAE,+CAA+C;QAC5D,GAAG,EAAE,mBAAmB;KACzB,CAAC;IACF,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC;QAChB,WAAW,EAAE,oCAAoC;QACjD,GAAG,EAAE,iBAAiB;KACvB,CAAC;CACH,CAAA","sourcesContent":["import {getThemeStore} from '../../utilities/theme-store.js'\nimport {themeFlags} from '../../flags.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {list} from '../../services/list.js'\nimport {ALLOWED_ROLES} from '../../utilities/theme-selector/fetch.js'\nimport {Flags} from '@oclif/core'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\n\nexport default class List extends ThemeCommand {\n  static description = 'Lists your remote themes.'\n\n  static flags = {\n    ...globalFlags,\n    password: themeFlags.password,\n    store: themeFlags.store,\n    role: Flags.enum({\n      description: 'Only list themes with the given role.',\n      options: ALLOWED_ROLES,\n      env: 'SHOPIFY_FLAG_ROLE',\n    }),\n    name: Flags.string({\n      description: 'Only list themes that contain the given name.',\n      env: 'SHOPIFY_FLAG_NAME',\n    }),\n    id: Flags.integer({\n      description: 'Only list theme with the given ID.',\n      env: 'SHOPIFY_FLAG_ID',\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(List)\n    const store = getThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, flags.password)\n\n    await list(adminSession, flags)\n  }\n}\n"]}