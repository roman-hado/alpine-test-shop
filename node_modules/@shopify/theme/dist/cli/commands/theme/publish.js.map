{"version":3,"file":"publish.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/publish.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,gCAAgC,CAAA;AAC5D,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAC,OAAO,EAAE,sBAAsB,EAAC,MAAM,2BAA2B,CAAA;AACzE,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AAEvE,MAAM,CAAC,OAAO,OAAO,OAAQ,SAAQ,YAAY;IAsB/C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QAC/C,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAA;QAC3E,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA;QAEtC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YAClD,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;SAChC;QAED,MAAM,OAAO,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;IAC7C,CAAC;;AAhCM,mBAAW,GAAG,uCAAuC,CAAA;AAE5D,gDAAgD;AACzC,cAAM,GAAG,KAAK,CAAA;AAEd,aAAK,GAAG;IACb,GAAG,WAAW;IACd,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,oBAAoB;QACjC,GAAG,EAAE,oBAAoB;KAC1B,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,uCAAuC;QACpD,GAAG,EAAE,uBAAuB;KAC7B,CAAC;IACF,KAAK,EAAE,UAAU,CAAC,KAAK;CACxB,CAAA","sourcesContent":["import {getThemeStore} from '../../utilities/theme-store.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {themeFlags} from '../../flags.js'\nimport {publish, renderArgumentsWarning} from '../../services/publish.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\n\nexport default class Publish extends ThemeCommand {\n  static description = 'Set a remote theme as the live theme.'\n\n  // Accept any number of args without naming them\n  static strict = false\n\n  static flags = {\n    ...globalFlags,\n    password: themeFlags.password,\n    force: Flags.boolean({\n      char: 'f',\n      description: 'Skip confirmation.',\n      env: 'SHOPIFY_FLAG_FORCE',\n    }),\n    theme: Flags.string({\n      char: 't',\n      description: 'Theme ID or name of the remote theme.',\n      env: 'SHOPIFY_FLAG_THEME_ID',\n    }),\n    store: themeFlags.store,\n  }\n\n  async run(): Promise<void> {\n    const {flags, argv} = await this.parse(Publish)\n    const store = await getThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, flags.password)\n    const themeId = flags.theme || argv[0]\n\n    if (argv.length > 0 && typeof argv[0] === 'string') {\n      renderArgumentsWarning(argv[0])\n    }\n\n    await publish(adminSession, themeId, flags)\n  }\n}\n"]}