{"version":3,"file":"share.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/share.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAC,aAAa,EAAC,MAAM,gCAAgC,CAAA;AAC5D,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACnD,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AACvE,OAAO,EAAC,WAAW,EAAE,GAAG,EAAC,MAAM,4BAA4B,CAAA;AAE3D,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,YAAY;IAiB7C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACvC,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;QAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAC,YAAY,EAAE,KAAK,CAAC,SAAS,EAAC,CAAC,CAAA;QAEjF,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;QAClC,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAA;QAE3E,MAAM,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,EAAE,EAAC,YAAY,EAAC,CAAC,CAAA;IAC/E,CAAC;;AAzBM,iBAAW,GAChB,oKAAoK,CAAA;AAE/J,WAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,UAAU;IACb,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,yFAAyF;QACtG,GAAG,EAAE,oBAAoB;KAC1B,CAAC;CACH,CAAA;AAEM,eAAS,GAAG,CAAC,OAAO,CAAC,CAAA","sourcesContent":["import {themeFlags} from '../../flags.js'\nimport {getThemeStore} from '../../utilities/theme-store.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {resolvePath, cwd} from '@shopify/cli-kit/node/path'\n\nexport default class Share extends ThemeCommand {\n  static description =\n    'Creates a shareable, unpublished, and new theme on your theme library with a randomized name. Works like an alias to {{command:theme push -u -t=RANDOMIZED_NAME}}.'\n\n  static flags = {\n    ...globalFlags,\n    ...themeFlags,\n    force: Flags.boolean({\n      hidden: true,\n      char: 'f',\n      description: 'Proceed without confirmation, if current directory does not seem to be theme directory.',\n      env: 'SHOPIFY_FLAG_FORCE',\n    }),\n  }\n\n  static cli2Flags = ['force']\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Share)\n    const directory = flags.path ? resolvePath(flags.path) : cwd()\n    const flagsToPass = this.passThroughFlags(flags, {allowedFlags: Share.cli2Flags})\n\n    const store = getThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, flags.password)\n\n    await execCLI2(['theme', 'share', directory, ...flagsToPass], {adminSession})\n  }\n}\n"]}